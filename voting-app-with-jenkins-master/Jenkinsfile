pipeline {
  agent any
  environement{
	  REGISTRY = "docker-registry.default.svc:5000"
  }
  stages {
	  
    stage('clone repo'){
	
    }
    stage('Build result') {
      steps {
        sh 'docker build -t cicd-demo/result ./voting-app-with-jenkins-master/result'
      }
    } 
    stage('Build vote') {
      steps {
        sh 'docker build -t cicd-demo/vote ./voting-app-with-jenkins-master/vote'
      }
    }
    stage('Build worker') {
      steps {
        sh 'docker build -t cicd-demo/worker ./voting-app-with-jenkins-master/worker'
      }
    }
    stage('Tag Push result') {
    	steps {
		script {
                	openshift.withCluster() {
                		openshift.withProject() {
					openshift.withCredentials('okd-cred'){
						openshift.tag("cicd-demo/result:latest", "${REGISTRY}/cicd-demo/result:latest")
						sh 'docker push registry/cicd-demo/result:latest'
					}
					
                    		}
                  	}
                }
    	}
    } 
    stage('Tag Push vote') {
    	steps {
		script {
                	openshift.withCluster() {
                		openshift.withProject() {
					openshift.withCredentials('okd-cred'){
						openshift.tag("cicd-demo/vote:latest", "${REGISTRY}/cicd-demo/vote:latest")
						sh 'docker push registry/cicd-demo/vote:latest'
					}
					
                    		}
                  	}
                }
    	}
    }  
    stage('Tag Push worker') {
    	steps {
		script {
                	openshift.withCluster() {
                		openshift.withProject() {
					openshift.withCredentials('okd-cred'){
						openshift.tag("cicd-demo/worker:latest", "${REGISTRY}/cicd-demo/worker:latest")
						sh 'docker push registry/cicd-demo/worker:latest'
					}
					
                    		}
                  	}
                }
    	}
    }  
    stage('Deploy result image') {
    	steps {
      		script {
        		openshift.withCluster() {
                		openshift.withProject() {
                      			openshift.selector("dc", "result").rollout().latest()
                   		}
                  	}
		}
    	}
    }
    stage('Deploy vote image') {
    	steps {
      		script {
        		openshift.withCluster() {
                		openshift.withProject() {
                      			openshift.selector("dc", "vote").rollout().latest()
                   		}
                  	}
      
		}
      	}
     }
     stage('Deploy worker image') {
     	steps {
      		script {
        		openshift.withCluster() {
                		openshift.withProject() {
                      			openshift.selector("dc", "worker").rollout().latest()
                   		}
                        }
		}
	}
     }
      
    
  }
}
